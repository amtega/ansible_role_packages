---

- name: Setup operating system packages
  block:
    - name: Setup EPEL
      ansible.builtin.include_role:
        name: amtega.epel
      when:
        - ansible_facts.distribution_major_version is version("7", "==")
        - ansible_local.epel is undefined

    - name: Determine operating system packages to be managed
      process:
        ansible_python_interpreter: >-
          {{ ansible_python_interpreter | default(omit) }}
        family: os
        distribution_name: "{{ ansible_facts.distribution | lower }}"
        distribution_version: "{{ ansible_facts.distribution_major_version }}"
        distribution_aliases: "{{ packages_distribution_aliases }}"
        packages_os:  "{{ packages_os }}"
        packages_os_hostvars: "{{ packages_os_hostvars | default([]) }}"
        packages_os_present: >-
          {{ ansible_facts._packages_os_present | default(omit) }}
        packages_os_managed: >-
          {{ ansible_facts._packages_os_managed | default(omit) }}
        packages_capabilities_present: >-
          {{ ansible_facts._packages_capabilities_present | default(omit) }}
        packages_groups_present: >-
          {{ ansible_facts._packages_groups_present | default(omit) }}
        packages_python: "{{ packages_python }}"
        packages_python_hostvars: "{{ packages_python_hostvars | default([]) }}"
        packages_python_present: >-
          {{ ansible_facts._packages_python_present | default(omit) }}
        packages_python_managed: >-
          {{ ansible_facts._packages_python_managed | default(omit) }}
        python_process_required: >-
          {{ ansible_facts._packages_python_process_required | default(true) }}
        python_version: "{{ ansible_facts.python.version.major }}"
        python_virtualenv: "{{ packages_python_virtualenv }}"
        python_virtualenv_command: >-
          {{ packages_python_virtualenv_command | default(omit) }}
        python_virtualenv_python: >-
          {{ packages_python_virtualenv_python | default(omit) }}
        python_virtualenv_site_packages: >-
          {{ packages_python_virtualenv_site_packages | bool }}
        python_virtualenv_exists: >-
          {{ ansible_facts._packages_python_virtualenv_exists | default(omit) }}
        python_virtualenv_needs_upgrade: >-
          {{ ansible_facts._packages_python_virtualenv_needs_upgrade
             | default(omit) }}
        python_previous_virtualenv: >-
          {{ ansible_facts._packages_python_virtualenv | default(omit) }}
        python_extra_args: "{{ packages_python_extra_args | default(omit) }}"
        timeout: "{{ packages_timeout }}"
        debug: "{{ packages_debug }}"
      register: packages_os_process_result

    - name: Assert operating system packages module is valid
      ansible.builtin.assert:
        that: packages_os_process_result.module is defined
        fail_msg: Cannot determine operating system packages module
        success_msg: Operating system packages module determined
        quiet: yes

    - name: Perform operating system packages setup
      ansible.builtin.include_tasks: >-
        packages_os_{{ packages_os_process_result.module }}.yml

    - name: Setup fact with operating system packages setup result
      ansible.builtin.set_fact:
        packages_os_result: "{{ packages_os_setup_result | default({}) }}"
      when: packages_os_process_result.packages | length > 0
  environment: "{{ _packages_environment }}"
  tags:
    - role::packages
    - role::packages::os
