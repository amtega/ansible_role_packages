---
# Role tasks

- block:
    - block:
        - name: Setup package manager python bindings
          package:
            name: python-apt
            state: present
          when: ansible_facts.os_family | lower == "debian"

        - name: Get operating system packages facts
          package_facts:

        - name: Setup operating system packages
          package:
            name: "{{ package.name }}"
            state: "{{ package.state }}"
          loop: "{{ packages_to_manage }}"
          loop_control:
            loop_var: package
            label: >-
              {{ package.name | default('') }} {{ package.state | default('') }}

        - name: Setup fact with operating packages managed
          set_fact:
            packages_os_managed: >-
              {{ packages_os_managed | default([]) + packages_to_manage }}
      vars:
        pip_package: >-
          {{ lookup("template", "pip_packages.yml.j2") | trim }}

        python_setup_tools_package: >-
          {{ lookup("template", "setuptools_packages.yml.j2") | trim }}

        python_pip_packages_spec:
          - name: "{{ pip_package }}"
            state: present

        python_setup_tools_packages_spec:
          - name: "{{ pip_package }}"
            state: present

        python_extra_packages: >-
          {{ (pip_package not in ansible_facts.packages.keys() | list)
             | ternary(python_pip_packages_spec, [])
             + (python_setup_tools_package
                not in ansible_facts.packages.keys() | list)
               | ternary(python_setup_tools_packages_spec, []) }}

        packages_to_manage: >-
          {{ lookup('template', 'packages.yml.j2') | from_yaml
             + (packages_python is not none)
                | ternary(python_extra_packages, []) }}

        packages_already_managed: "{{ packages_os_managed | default([]) }}"

        packages_already_present: "{{ ansible_facts.packages.keys() | list }}"

        packages_spec: "{{ packages_os }}"
      tags:
        - role::packages
        - role::packages::os

    - block:
        - name: Get python packages facts
          shell: "pip{{ ansible_facts.python.version.major }} list"
          args:
            warn: no
          changed_when: no
          when: packages_python is not none
          register: packages_get_python_facts_result

        - name: Setup python packages
          pip:
            name: "{{ package.name }}"
            state: "{{ package.state }}"
            extra_args: >-
              {{ packages_pip_extra_args }}
              {{ package.pip_extra_args | default('') }}
          loop: "{{ packages_to_manage }}"
          loop_control:
            loop_var: package
            label: "{{ package.name }} {{ package.state }}"

        - name: Setup fact with python packages managed
          set_fact:
            packages_python_managed: >-
              {{ packages_python_managed | default([]) + packages_to_manage }}
      vars:
        packages_to_manage: >-
          {{ lookup('template', 'packages.yml.j2') | from_yaml }}

        packages_already_managed: "{{ packages_python_managed | default([]) }}"

        packages_already_present: >-
          {{ packages_get_python_facts_result.stdout_lines
             | map("regex_replace", "(.*) \(.*\)", "\1")
             | list }}

        packages_spec: "{{ packages_python }}"
      tags:
        - role::packages
        - role::packages::python

  environment: "{{ proxy_client_environment }}"
  tags:
    - role::packages
