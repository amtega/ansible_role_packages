---

- name: Setup python packages
  block:
    - name: Determine python packages to be managed and setup virtualenv
      process:
        ansible_python_interpreter: >-
          {{ ansible_python_interpreter | default(omit) }}
        family: python
        distribution_name: "{{ ansible_facts.distribution | lower }}"
        distribution_version: "{{ ansible_facts.distribution_major_version }}"
        distribution_aliases: "{{ packages_distribution_aliases }}"
        packages_os:  "{{ packages_os }}"
        packages_os_hostvars: "{{ packages_os_hostvars | default([]) }}"
        packages_os_present: >-
          {{ ansible_facts._packages_os_present | default(omit) }}
        packages_os_managed: >-
          {{ ansible_facts._packages_os_managed | default(omit) }}
        packages_capabilities_present: >-
          {{ ansible_facts._packages_capabilities_present | default(omit) }}
        packages_groups_present: >-
          {{ ansible_facts._packages_groups_present | default(omit) }}
        packages_python: "{{ packages_python }}"
        packages_python_hostvars: "{{ packages_python_hostvars | default([]) }}"
        packages_python_present: >-
          {{ ansible_facts._packages_python_present | default(omit) }}
        packages_python_managed: >-
          {{ ansible_facts._packages_python_managed | default(omit) }}
        python_process_required: >-
          {{ ansible_facts._packages_python_process_required | default(false) }}
        python_version: "{{ ansible_facts.python.version.major }}"
        python_virtualenv: "{{ packages_python_virtualenv }}"
        python_virtualenv_command: >-
          {{ packages_python_virtualenv_command | default(omit) }}
        python_virtualenv_python: >-
          {{ packages_python_virtualenv_python | default(omit) }}
        python_virtualenv_site_packages: >-
          {{ packages_python_virtualenv_site_packages | bool }}
        python_virtualenv_exists: >-
          {{ ansible_facts._packages_python_virtualenv_exists | default(omit) }}
        python_virtualenv_needs_upgrade: >-
          {{ ansible_facts._packages_python_virtualenv_needs_upgrade
             | default(omit) }}
        python_previous_virtualenv: >-
          {{ ansible_facts._packages_python_virtualenv | default(omit) }}
        python_extra_args: "{{ packages_python_extra_args | default(omit) }}"
        timeout: "{{ packages_timeout }}"
        debug: "{{ packages_debug }}"
      register: packages_python_process_result

    - name: Setup python packages
      ansible.builtin.pip:
        name: "{{ packages_package_item.name }}"
        state: "{{ packages_package_item.state }}"
        virtualenv: >-
          {{ packages_package_item.virtualenv
             | default(packages_python_virtualenv)
             | default(omit) }}
        virtualenv_command: >-
          {{ packages_package_item.virtualenv_command
             | default(packages_python_virtualenv_command)
             | default("virtualenv") }}
        virtualenv_python: >-
          {{ packages_package_item.virtualenv_python
             | default(packages_python_virtualenv_python)
             | default(omit) }}
        virtualenv_site_packages: >-
          {{ packages_package_item.virtualenv_site_packages
             | default(packages_python_virtualenv_site_packages)
             | default(omit) }}
        extra_args: >-
          {{ packages_package_item.extra_args
             | default(packages_python_extra_args)
             | default(omit) }}
      register: packages_python_setup_result
      loop: "{{ packages_python_process_result.packages }}"
      loop_control:
        loop_var: packages_package_item
        label: >-
          {{ packages_package_item.name }}
          {{ packages_package_item.state }}
      notify: "{{ packages_python_notify }}"
      environment: "{{ _packages_environment }}"
      vars:
        ansible_python_interpreter: >-
          {{ packages_python_process_result.python_interpreter }}

    - name: Setup ansible python interpreter
      ansible.builtin.set_fact:
        ansible_python_interpreter: >-
          {{ packages_python_process_result.python_interpreter }}
      when: packages_python_set_ansible_interpreter | bool

    - name: Setup fact with python packages setup result
      ansible.builtin.set_fact:
        packages_python_result: >-
          {{ packages_python_setup_result | default({}) }}
      when: packages_python_process_result.packages | length > 0
  environment: "{{ _packages_environment }}"
  tags:
    - role::packages::python
