---
# Setup python packages tasks

- block:
    - include_role:
        name: amtega.epel
      when:
        - packages_to_manage | length > 0
        - packages_os_managed is undefined

    - block:
        - name: Get python packages facts
          shell: >
            {{ packages_pip_dir + "pip list | awk '{ print $1 };'" }}
          args:
            warn: no
          changed_when: no
          when: packages_python.keys() | list | length > 0
          register: packages_get_python_facts_result
          vars:
            packages_pip_dir: >-
              {{ (packages_python_virtualenv | default("") | length > 0)
                 | ternary(packages_python_virtualenv + "/bin/",
                           packages_python_bin_dir) }}

        - name: Setup python packages
          pip:
            name: "{{ package.name }}"
            state: "{{ package.state }}"
            virtualenv: >-
              {{ package.virtualenv
                 | default(packages_python_virtualenv)
                 | default(omit) }}
            virtualenv_command: >-
              {{ package.virtualenv_command
                 | default(packages_python_virtualenv_command)
                 | default("virtualenv") }}
            virtualenv_python: >-
              {{ package.virtualenv_python
                 | default(packages_python_virtualenv_python)
                 | default(omit) }}
            virtualenv_site_packages: >-
              {{ package.virtualenv_site_packages
                 | default(packages_python_virtualenv_site_packages)
                 | default(omit) }}
            extra_args: >-
              {{ package.extra_args
                 | default(packages_python_extra_args)
                 | default(omit) }}
          loop: "{{ packages_to_manage }}"
          loop_control:
            loop_var: package
            label: "{{ package.name }} {{ package.state }}"

        - name: Setup fact with python packages managed
          set_fact:
            packages_python_managed: >-
              {{ packages_python_managed | default([]) + packages_to_manage }}
      environment: "{{ proxy_client_environment }}"
      tags:
        - role::packages
        - role::packages::python

  vars:
    packages_to_manage: >-
      {{ lookup('template', 'packages.yml.j2') | from_yaml }}

    packages_already_managed: "{{ packages_python_managed | default([]) }}"

    packages_already_present: >-
      {{ packages_get_python_facts_result.stdout_lines
         | default([]) }}

    packages_spec: "{{ packages_python }}"

    packages_spec_hostvars: "{{ packages_python_hostvars | default([]) }}"
