---
# Role variables

packages_os_process_required: >-
  {{ packages_os.keys() | list | length > 0
     or packages_os_hostvars | default([]) | length > 0
     or packages_python_process_required
     or packages_os_force | bool }}

packages_python_process_required: >-
  {{ packages_python.keys() | list | length > 0
     or packages_python_hostvars | default([]) | length > 0
     or packages_python_force | bool }}

packages_disable_plugin_value: >-
  {{ (packages_disable_plugins is undefined
      or packages_disable_plugins | length == 0)
      | ternary(omit, packages_disable_plugins | join(',')) }}
packages_enable_plugin_value: >-
  {{ (packages_enable_plugins is undefined
      or packages_enable_plugins | length == 0)
      | ternary(omit, packages_enable_plugins | join(',')) }}

# Workaround to avoid false linter positive

packages_pipe: "|"

packages_os_exclude_pattern: >-
  {{ "^packages_os_("
      + "load_from_hostvars"
      + packages_pipe
      + "process_result"
      + packages_pipe
      + "setup_result"
      + packages_pipe
      + "result)$" }}

packages_python_exclude_pattern: >-
  {{ "^packages_python_("
      + "load_from_hostvars"
      + packages_pipe
      + "virtualenv"
      + packages_pipe
      + "extra_args"
      + packages_pipe
      + "set_ansible_interpreter"
      + packages_pipe
      + "bin_dir"
      + packages_pipe
      + "process_result"
      + packages_pipe
      + "setup_result"
      + packages_pipe
      + "source_binary_check_result"
      + packages_pipe
      + "result).*$" }}

# Environment vars

packages_lang_environment:
  LANGUAGE: en_US.utf8
  LANG: en_US.utf8
  LC_ALL: en_US.utf8

packages_tmp_dir_environment:
  TMPDIR: "{{ packages_tmp_dir }}"

packages_environment: >-
  {{ proxy_client_environment
     | default({})
     | combine(packages_tmp_dir_environment)
     | combine(packages_lang_environment) }}
