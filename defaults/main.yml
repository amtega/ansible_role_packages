---
# Role default lower priority variables

# Dictionary with the operating system packages to manage for each distribution
# name/major release combination. The structure of the dict is the following:
#
# {
#   <distribution name 1>:
#     <distribution 1 major release 1>:
#       <package name 1>: <state (as expected by ansible package module)>
#       <package name 2>: <state>
#       <package name N>: <state>
#     <distribution 1 major release 2>:
#       <package name 1>: <state>
#       <package name 2>: <state>
#       <package name N>: <state>
#     <distribution 1 major release N>:
#       <package name 1>: <state>
#       <package name 2>: <state>
#       <package name N>: <state>
#
#   <distribution name 2>:
#     <distribution 2 major release 1>:
#       <package name 1>: <state>
#       <package name 2>: <state>
#       <package name N>: <state>
#     <distribution 2 major release 2>:
#       <package name 1>: <state>
#       <package name 2>: <state>
#       <package name N>: <state>
#     <distribution 2 major release N>:
#       <package name 1>: <state>
#       <package name 2>: <state>
#       <package name N>: <state>
# }
#
# In the previous dictionary you can replace distribion name/major release by
# the `all` keyword to apply that config to all distributions/releases.
#
# If the order of the packages is important, you can replace the dictionary
# structure for the packages by a list of dictionaries in this way:
# {
#   <distribution name 1>:
#     <distribution 1 major release 1>:
#       - <package name 1>: <state (as expected by ansible package module)>
#       - <package name 2>: <state>
#       - <package name N>: <state>
#    ...
# }
#
# If the name of the package needs to be generated by jinja, you can replace the
# dictionary structure for the packages by a list of dictionaries that contains
# the `name` and `state` attributes, in this way:
# {
#   <distribution name 1>:
#     <distribution 1 major release 1>:
#       - name: <package name 1>
#         state: <state (as expected by ansible package module)>
#       - name: <package name2>
#         state: <state>
#       - name: <package name3>
#         state: <state>
#    ...
# }

packages_os:

# Dictionary with the python packages to manage for each distribution name/major
# release combination. The structure of the dict is the same that for the
# variable `packages_os`

packages_python:

#
# Extra arguments for the python pip tool to install packages
#

packages_pip_extra_args: "--upgrade"
