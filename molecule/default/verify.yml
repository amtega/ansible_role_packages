---

- name: Verify core functionality
  hosts: molecule_hosts
  gather_facts: yes
  roles:
    - amtega.packages
  tasks:
    - name: Gather packages info
      when: ansible_facts.distribution_major_version is version("6", ">")
      block:
        - name: Get operating system packages facts
          ansible.builtin.package_facts:

        - name: Setup fact with packages found
          ansible.builtin.set_fact:
            packages_found: "{{ ansible_facts.packages.keys() | list }}"

    - name: Gather packages info with legacy mechanisms
      when: ansible_facts.distribution_major_version is version("7", "<")
      block:
        - name: Get operating system packages facts using legacy command
          # noqa command-instead-of-module
          ansible.builtin.command: /bin/rpm -qa --queryformat="%{NAME}\n"
          changed_when: no
          register: legacy_packages_result

        - name: Setup fact with packages found using legacy comand
          ansible.builtin.set_fact:
            packages_found: "{{ legacy_packages_result.stdout_lines }}"

    - name: Check operating system packages
      ansible.builtin.assert:
        that:
          - >-
            "httpd" in packages_found
          - >-
            "lynx" in packages_found
          - >-
            ansible_facts.distribution | lower == "fedora"
            or (ansible_facts.distribution | lower != "fedora"
                and "telnet" in packages_found)
          - >-
            ansible_facts.distribution_major_version is version("6", "==")
            or (ansible_facts.distribution_major_version is version("6", "!=")
                and ("tomcat" in packages_found
                     or "tomcat-native" in packages_found))

    - name: Get python packages facts
      ansible.builtin.command: >-
        {{ ansible_facts.packages_python_bin_dir }}pip list
      changed_when: no
      register: pip_result

    - name: Get python packages facts in custon virtual environment
      ansible.builtin.command: "~/.ansible_venv/bin/pip list"
      changed_when: no
      when: ansible_facts.distribution_major_version is version("34", "==")
      register: pip_venv_result

    - name: Check python pexpect package
      ansible.builtin.assert:
        that:
          - pip_output is search("pexpect")
          - >-
            ansible_facts.distribution_major_version is version("7", "!=")
            or (ansible_facts.distribution_major_version is version("7", "==")
                and pip_output is search("lxml"))
      vars:
        pip_output: >-
          {{ (ansible_facts.distribution_major_version is version("34", "=="))
             | ternary(pip_venv_result.stdout | default(""),
                       pip_result.stdout) }}

    - name: Check python gitlab package
      ansible.builtin.assert:
        that: pip_result.stdout is search("python-gitlab")

    - name: Check facts
      ansible.builtin.assert:
        that:
          - >-
            (ansible_facts["_packages_capabilities_present"] | length > 0
             and ansible_facts.distribution_major_version is version("6", ">"))
             or (ansible_facts["_packages_capabilities_present"] == 0
                 and ansible_facts.distribution_major_version
                     is version("7"), "z")
          - ansible_facts["_packages_groups_present"] | length >= 0
          - >-
            ansible_facts["_packages_os_present"] | length > 0
            or ansible_facts.distribution_major_version is version("7", "<")
          - >-
            ansible_facts["_packages_os_managed"] | length == 0
            or ansible_facts.distribution_major_version is version("7", "<")
          - ansible_facts["_packages_python_managed"] | length > 0
          - ansible_facts["_packages_python_present"] | length > 0
          - ansible_facts["_packages_python_virtualenv_exists"]
          - ansible_python_interpreter == "/var/lib/ansible/venv/bin/python"
          - >-
            ansible_facts["packages_python_virtualenv_dir"]
            == "/var/lib/ansible/venv/"
          - >-
            ansible_facts["packages_python_bin_dir"]
            == "/var/lib/ansible/venv/bin/"

- name: Verify caching stuff
  hosts: molecule_hosts
  gather_facts: no
  roles:
    - amtega.packages
  tasks:
    - name: Check caching stuff
      ansible.builtin.assert:
        that:
          - not packages_os_process_result.debug_info.packages_os_gathered
          - not packages_os_process_result.debug_info.capabilites_gathered
          - not packages_os_process_result.debug_info.groups_gathered
          - >-
            not packages_python_process_result.debug_info
            .packages_python_gathered
          - not packages_python_process_result.debug_info.virtualenv_created
